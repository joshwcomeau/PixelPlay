function FetchCities(e){return e("/api/cities")}function FetchPhotos(e){return{allPhotos:[],filteredPhotos:[],query:function(t){var o=e.defer(),n={feature:"fresh_today",only:"Urban Exploration",image_size:5,rpp:100},i=t||n,s=this;return _500px.api("/photos",i,function(e){e.success?(s.allPhotos=e.data.photos,s.filteredPhotos=s.appropriateForGame(e.data.photos),o.resolve({success:!0})):o.reject({success:!1,status:e.status,message:e.error_message})}),o.promise},appropriateForGame:function(e){return _.filter(e,function(e){return null!==e.latitude&&null!==e.longitude&&e.width>=1200&&e.width>e.height})}}}function GameController(e,t,o,n){this.manager=t,t.cities=n,t.photos=o.filteredPhotos,t.initialize()}function GameManager(e,t,o,n){this.initialize=function(){this.cities,this.photos,this.score=0,this.question=0,this.remainingQs=this.photos.length,this.page=1,this.currentPhoto=null,this.loading=!1,this.loadPercent=0,this.state="initial",this.preloadPhotos(20),this.updateLocations()},this.startGame=function(){this.state="running"},this.setupGame=function(){this.goToNextQuestion(),this.state="waiting"},this.preloadPhotos=function(e){var t=this.question,n=this.question+(e||1),i=this.photos.slice(t,n),s=this;o.preloadImages(i).then(function(){s.setupGame(),console.log("Preload successful woohoo!")},function(e){s.state="error",console.error("Image failed",e)},function(e){s.loadPercent=e.percent})},this.updateLocations=function(){var e=this;n.getLocations(e.photos).then(function(){console.log("All images have locations",e.photos)},function(e){console.log("Uh oh, something went wrong",e)},function(t){e.photos[t.index].location=t.location,console.log(e.photos)})},this.goToNextQuestion=function(){this.currentPhoto=this.photos.shift(),this.remainingQs=this.photos.length,this.question++}}function GlobalController(e,t,o){var n=this;n.manager=o,n.currentUser=null,n.userService=t,e.$on("userAuthenticated",function(t,o){e.$apply(function(){n.currentUser=o,console.log(o)})})}angular.module("pixelPlay.game",[]),angular.module("pixelPlay.score",[]),angular.module("appRoutes",[]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"/components/dashboard/dashboard.index.html"}).when("/game",{templateUrl:"/components/game/game.index.html",controller:"GameController",controllerAs:"game",resolve:GameController.resolve}),t.html5Mode(!0)}]),angular.module("pixelPlay",["ngAnimate","ngRoute","ngResource","appRoutes","pixelPlay.game","pixelPlay.score"]).run(["User","$rootScope",function(e){_500px.init({sdk_key:"1e6cd00470800d39b07106a70a650cdf88277901"}),console.log("500px initialized"),_500px.getAuthorizationStatus(e.updateUser)}]),angular.module("pixelPlay.game").factory("FetchCities",["$resource",FetchCities]),angular.module("pixelPlay.game").factory("FetchPhotos",["$q",FetchPhotos]),GameController.resolve={getPhotos:["FetchPhotos",function(e){return e.query()}],bogusAnswers:["FetchCities",function(e){return e.query().$promise}]},GameController.prototype.pickRandomCity=function(){var e=_.sample(this.bogusCities);return _.sample(e.cities)},GameController.prototype.buildAnswers=function(e){e.location;wrong_answer_1=""},GameController.$inject=["$scope","GameManager","FetchPhotos","bogusAnswers"],angular.module("pixelPlay.game").controller("GameController",["$scope","GameManager","FetchPhotos","bogusAnswers",GameController]),angular.module("pixelPlay.game").service("GameManager",["FetchPhotos","FetchCities","Preloader","ReverseGeocoder",GameManager]),GlobalController.$inject=["$scope","User","GameManager"],angular.module("pixelPlay").controller("GlobalController",["$scope","User","GameManager",GlobalController]),angular.module("pixelPlay.score").factory("Score",["$resource",function(e){return e("/api/scores/:id")}]),angular.module("pixelPlay").service("User",["$rootScope","Score",function(e){var t=this;t.currentUser=null,t.data=null,t.login=function(){_500px.login(t.updateUser)},t.logout=function(){_500px.logout(t.updateUser)},t.updateUser=function(o){"authorized"===o?_500px.api("/users",function(o){console.log(o),t.currentUser=o.data.user,t.data=o,e.$broadcast("userAuthenticated",o.data.user)}):(console.log("updateUser is logging out"),t.currentUser=t.data=null)}}]),angular.module("pixelPlay").factory("Preloader",["$q","$rootScope",function(e,t){function o(t){this.imageLocations=_.map(t,function(e){return e.image_url}),this.imageCount=this.imageLocations.length,this.loadCount=0,this.errorCount=0,this.states={PENDING:1,LOADING:2,RESOLVED:3,REJECTED:4},this.state=this.states.PENDING,this.deferred=e.defer(),this.promise=this.deferred.promise}return o.preloadImages=function(e){var t=new o(e);return t.load()},o.prototype={constructor:o,isInitiated:function(){return this.state!==this.states.PENDING},isRejected:function(){return this.state===this.states.REJECTED},isResolved:function(){return this.state===this.states.RESOLVED},load:function(){if(this.isInitiated())return this.promise;this.state=this.states.LOADING;for(var e=0;e<this.imageCount;e++)this.loadImageLocation(this.imageLocations[e]);return this.promise},handleImageError:function(e){this.errorCount++,this.isRejected()||(this.state=this.states.REJECTED,this.deferred.reject(e))},handleImageLoad:function(e){this.loadCount++,this.isRejected()||(this.deferred.notify({percent:Math.ceil(this.loadCount/this.imageCount*100),imageLocation:e}),this.loadCount===this.imageCount&&(this.state=this.states.RESOLVED,this.deferred.resolve(this.imageLocations)))},loadImageLocation:function(e){var o=this,n=$(new Image).load(function(e){t.$apply(function(){o.handleImageLoad(e.target.src),o=n=e=null})}).error(function(e){t.$apply(function(){o.handleImageError(e.target.src),o=n=e=null})}).prop("src",e)}},o}]),angular.module("pixelPlay").factory("ReverseGeocoder",["$q","$interval",function(e,t){var o,n=1500,i=new google.maps.Geocoder,s=e.defer(),r=function(e){var t,o=e[0].address_components,n=[];return _.forEach(o,function(e){"locality"===e.types[0]?n.unshift(e.long_name):"administrative_area"===e.types[0].substr(0,19)?n.push(e.long_name):"country"===e.types[0]&&(t=e.long_name)}),console.log("City is ",n," and country is ",t),{city:n[0],country:t}},a=function(e,t,n){o=new google.maps.LatLng(e,t),i.geocode({latLng:o},function(e,t){t==google.maps.GeocoderStatus.OK?e[1]?s.notify({location:r(e),index:n}):alert("No results found"):alert("Geocoder failed due to: "+t)})};return{getLocations:function(e){var o=3,i=0;return t(function(){a(e[i].latitude,e[i].longitude,i),i++},n,o),s.promise}}}]);
//# sourceMappingURL=main.min.js.map