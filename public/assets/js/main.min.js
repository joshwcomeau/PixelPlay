function FetchPhotos(e){return{allPhotos:[],filteredPhotos:[],query:function(t){var o=e.defer(),a={feature:"fresh_today",only:"Urban Exploration",image_size:5,rpp:100},r=t||a,n=this;return _500px.api("/photos",r,function(e){e.success?(n.allPhotos=e.data.photos,n.filteredPhotos=n.appropriateForGame(e.data.photos),o.resolve({success:!0})):o.reject({success:!1,status:e.status,message:e.error_message})}),o.promise},appropriateForGame:function(e){return _.filter(e,function(e){return null!==e.latitude&&null!==e.longitude&&e.width>=1200&&e.width>e.height})}}}function GameController(e,t,o,a,r){this.question=0,this.page=1,this.photoData=null,this.currentPhoto=null,this.fetchPhotos=o,this.photoData=o.filteredPhotos,this.revGeocoder=r,console.log(this.photoData),this.loading=!1,this.loadPercent=null,this.preloader=a,this.manager=t,this.preloadPhotos(20),this.updateLocations()}function GlobalController(e,t,o){var a=this;a.manager=o,a.currentUser=null,a.userService=t,e.$on("userAuthenticated",function(t,o){e.$apply(function(){a.currentUser=o,console.log(o)})})}angular.module("pixelPlay.game",[]),angular.module("pixelPlay.score",[]),angular.module("appRoutes",[]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"/components/dashboard/dashboard.index.html"}).when("/game",{templateUrl:"/components/game/game.index.html",controller:"GameController",controllerAs:"game",resolve:GameController.resolve}),t.html5Mode(!0)}]),angular.module("pixelPlay",["ngAnimate","ngRoute","ngResource","appRoutes","pixelPlay.game","pixelPlay.score"]).run(["User","$rootScope",function(e){_500px.init({sdk_key:"1e6cd00470800d39b07106a70a650cdf88277901"}),console.log("500px initialized"),_500px.getAuthorizationStatus(e.updateUser)}]),angular.module("pixelPlay.game").factory("FetchPhotos",["$q",FetchPhotos]),GameController.resolve={getPhotos:["FetchPhotos",function(e){return e.get()}]},GameController.prototype.start=function(){this.manager.state="running"},GameController.prototype.getNextPhoto=function(){this.currentPhoto=this.photoData.shift()},GameController.prototype.preloadPhotos=function(e){var t=this.question,o=this.question+(e||1),a=this.photoData.slice(t,o),r=this;this.preloader.preloadImages(a).then(function(){r.getNextPhoto(),"initial"===r.manager.state&&(r.manager.state="waiting"),console.log("Preload successful!")},function(e){r.manager.state="error",console.error("Image failed",e)},function(e){r.loadPercent=e.percent})},GameController.prototype.updateLocations=function(){var e=this;e.revGeocoder.getLocations(e.photoData).then(function(){console.log("All images have locations",e.photoData)},function(e){console.log("Uh oh, something went wrong",e)},function(t){e.photoData[t.index].location=t.location,console.log(e.photoData)})},GameController.$inject=["$scope","GameManager","FetchPhotos","Preloader","ReverseGeocoder"],angular.module("pixelPlay.game").controller("GameController",["$scope","GameManager","FetchPhotos","Preloader","ReverseGeocoder",GameController]),angular.module("pixelPlay.game").service("GameManager",function(){this.score=0,this.state="initial"}),GlobalController.$inject=["$scope","User","GameManager"],angular.module("pixelPlay").controller("GlobalController",["$scope","User","GameManager",GlobalController]),angular.module("pixelPlay.score").factory("Score",["$resource",function(e){return e("/api/scores/:id")}]),angular.module("pixelPlay").service("User",["$rootScope","Score",function(e){var t=this;t.currentUser=null,t.data=null,t.login=function(){_500px.login(t.updateUser)},t.logout=function(){_500px.logout(t.updateUser)},t.updateUser=function(o){"authorized"===o?_500px.api("/users",function(o){console.log(o),t.currentUser=o.data.user,t.data=o,e.$broadcast("userAuthenticated",o.data.user)}):(console.log("updateUser is logging out"),t.currentUser=t.data=null)}}]),angular.module("pixelPlay").factory("Preloader",["$q","$rootScope",function(e,t){function o(t){this.imageLocations=_.map(t,function(e){return e.image_url}),this.imageCount=this.imageLocations.length,this.loadCount=0,this.errorCount=0,this.states={PENDING:1,LOADING:2,RESOLVED:3,REJECTED:4},this.state=this.states.PENDING,this.deferred=e.defer(),this.promise=this.deferred.promise}return o.preloadImages=function(e){var t=new o(e);return t.load()},o.prototype={constructor:o,isInitiated:function(){return this.state!==this.states.PENDING},isRejected:function(){return this.state===this.states.REJECTED},isResolved:function(){return this.state===this.states.RESOLVED},load:function(){if(this.isInitiated())return this.promise;this.state=this.states.LOADING;for(var e=0;e<this.imageCount;e++)this.loadImageLocation(this.imageLocations[e]);return this.promise},handleImageError:function(e){this.errorCount++,this.isRejected()||(this.state=this.states.REJECTED,this.deferred.reject(e))},handleImageLoad:function(e){this.loadCount++,this.isRejected()||(this.deferred.notify({percent:Math.ceil(this.loadCount/this.imageCount*100),imageLocation:e}),this.loadCount===this.imageCount&&(this.state=this.states.RESOLVED,this.deferred.resolve(this.imageLocations)))},loadImageLocation:function(e){var o=this,a=$(new Image).load(function(e){t.$apply(function(){o.handleImageLoad(e.target.src),o=a=e=null})}).error(function(e){t.$apply(function(){o.handleImageError(e.target.src),o=a=e=null})}).prop("src",e)}},o}]),angular.module("pixelPlay").factory("ReverseGeocoder",["$q","$interval",function(e,t){var o,a=1500,r=new google.maps.Geocoder,n=e.defer(),s=function(e){var t,o=e[0].address_components,a=[];return _.forEach(o,function(e){"locality"===e.types[0]?a.unshift(e.long_name):"administrative_area"===e.types[0].substr(0,19)?a.push(e.long_name):"country"===e.types[0]&&(t=e.long_name)}),console.log("City is ",a," and country is ",t),{city:a[0],country:t}},i=function(e,t,a){o=new google.maps.LatLng(e,t),r.geocode({latLng:o},function(e,t){t==google.maps.GeocoderStatus.OK?e[1]?n.notify({location:s(e),index:a}):alert("No results found"):alert("Geocoder failed due to: "+t)})};return{getLocations:function(e){var o=3,r=0;return t(function(){i(e[r].latitude,e[r].longitude,r),r++},a,o),n.promise}}}]);
//# sourceMappingURL=main.min.js.map